loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local a = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local b = a:CreateWindow({Name = "Lipi's Menu", ConfigurationSaving = {Enabled = false}})
local c = b:CreateTab("ATM", 4483362458)
local d = require(game.ReplicatedStorage.Modules.Game.Minigames.SliderMinigame)
local e, f, g, h = false, false, {}, game:GetService("Players").LocalPlayer
local i = false

c:CreateParagraph({Title = "Auto ATM Hack", Content = "Completes the minigame after 1.3 seconds"})

c:CreateToggle({
	Name = "Enable ATM Hack",
	CurrentValue = false,
	Callback = function(j)
		e = j
		if e then
			d.enabled.hook(function(k)
				if k then task.wait(1.3) d.win:Fire(true) end
			end)
		end
	end
})

local l = workspace:WaitForChild("Map"):WaitForChild("Props")

c:CreateToggle({
	Name = "ESP ATM",
	CurrentValue = false,
	Callback = function(m)
		f = m
		for _, n in ipairs(g) do n:Destroy() end
		table.clear(g)
		if f then
			for _, o in ipairs(l:GetDescendants()) do
				if o:IsA("Model") and o.Name:lower():find("atm") then
					local p = o.PrimaryPart or o:FindFirstChildWhichIsA("BasePart")
					if p then
						local q = Instance.new("Highlight")
						q.FillColor = Color3.fromRGB(150, 0, 255)
						q.FillTransparency = 0.7
						q.OutlineColor = Color3.fromRGB(200, 0, 255)
						q.OutlineTransparency = 0
						q.Adornee = o
						q.Parent = p
						table.insert(g, q)
					end
				end
			end
		end
	end
})

c:CreateParagraph({Title = "TP Walk [Press X to toggle]", Content = "Mobile users can use the button below"})

c:CreateButton({
	Name = "Toggle TP Walk (Mobile)",
	Callback = function()
		i = not i
		a:Notify({Title = "TP Walk", Content = i and "Enabled" or "Disabled", Duration = 3})
	end
})

game:GetService("UserInputService").InputBegan:Connect(function(r, s)
	if not s and r.KeyCode == Enum.KeyCode.X then i = not i end
end)

task.spawn(function()
	while task.wait() do
		if i then
			local t, u, v = h.Character, nil, nil
			if t then
				u = t:FindFirstChild("HumanoidRootPart")
				v = t:FindFirstChildWhichIsA("Humanoid")
			end
			if u and v and v.MoveDirection.Magnitude > 0 then
				u.CFrame = u.CFrame + (v.MoveDirection.Unit * 1)
			end
		end
	end
end)
